// wp34s_pp.pl: Command line: multisolve.wp34s
// wp34s_pp.pl: Source file(s): multisolve.wp34s
// wp34s_pp.pl: Preprocessor revision: $Rev: 2956 $ 
001 /*             */ LBL'MLS'
002 /*             */ CL[alpha]
003 /*             */ [alpha]'#[space]O' // "# OF EQ?"
004 /*             */ [alpha]'F[space]E'
005 /*             */ [alpha] Q
006 /*             */ [alpha] ?
007 /*             */ PROMPT
008 /*             */ FILL
009 /*             */ x[^2]
010 /*             */ +
011 /*             */ 6		
012 /*             */ +
013 /*             */ LocR[->]X
014 /*             */ x[<->] Y
015 /*             */ STO .01
016 /*             */ # 118		
017 /*             */ STO .02
018 /* iteration:: */ STO .04
019 /*             */ 1
020 /*             */ STO .00
021 /*             */ STO .03
022 /* jacobian::  */ RCL[->].00	
023 /*             */ f'(x)[->].03
024 /*             */ STO[->].02
025 /*             */ RCL L
026 /*             */ STO[->].00
027 /*             */ INC .00
028 /*             */ INC .02
029 /*             */ RCL .00
030 /*             */ x<=? .01
031 /*             */ BACK 09 // JMP jacobian
032 /*             */ 1
033 /*             */ STO .00
034 /*             */ INC .03
035 /*             */ RCL .03
036 /*             */ x<=? .01
037 /*             */ BACK 15 // JMP jacobian
038 /*             */ # 117		
039 /*             */ STO .00		
040 /*             */ 1
041 /*             */ STO .03
042 /* function::  */ XEQ[->].03	
043 /*             */ STO[->].02
044 /*             */ INC .02
045 /*             */ INC .03
046 /*             */ RCL .03
047 /*             */ x<=? .01
048 /*             */ BACK 06 // JMP function
049 /*             */ # 118		
050 /*             */ STO .02		
051 /*             */ RCL .01
052 /*             */ SDR 2
053 /*             */ RCL+ .02	
054 /*             */ RCL .01
055 /*             */ x[^2]
056 /*             */ RCL+ .02
057 /*             */ RCL .01
058 /*             */ SDR 2
059 /*             */ +
060 /*             */ 1
061 /*             */ SDR 4
062 /*             */ +		
063 /*             */ ENTER
064 /*             */ LINEQS
065 /*             */ RCL .01
066 /*             */ SDR 2
067 /*             */ 1
068 /*             */ SDR 4
069 /*             */ +
070 /*             */ 1
071 /*             */ +		
072 /*             */ XEQ'M-'
073 /*             */ M-ALL
074 /*             */ 0
075 /* sum::       */ RCL[->]Y	
076 /*             */ x[^2]
077 /*             */ +
078 /*             */ ISG Y
079 /*             */ BACK 04 // JMP sum
080 /*             */ x[!=]? .04
081 /*             */ BACK 63 // JMP iteration
082 /*             */ RCLS 01		
083 /*             */ RTN
084 /*             */ LBL 01
085 /* __LBL_01::  */ STO[->].00
086 /*             */ XEQ'1'
087 /*             */ RTN
088 /*             */ LBL 02
089 /* __LBL_02::  */ STO[->].00
090 /*             */ XEQ'2'
091 /*             */ RTN
092 /*             */ LBL 03
093 /* __LBL_03::  */ STO[->].00
094 /*             */ XEQ'3'
095 /*             */ RTN
096 /*             */ LBL 04
097 /* __LBL_04::  */ STO[->].00
098 /*             */ XEQ'4'
099 /*             */ RTN
100 /*             */ LBL 05
101 /* __LBL_05::  */ STO[->].00
102 /*             */ XEQ'5'
103 /*             */ RTN
104 /*             */ LBL 06
105 /* __LBL_06::  */ STO[->].00
106 /*             */ XEQ'6'
107 /*             */ RTN
108 /*             */ LBL 07
109 /* __LBL_07::  */ STO[->].00
110 /*             */ XEQ'7'
111 /*             */ RTN
112 /*             */ LBL 08
113 /* __LBL_08::  */ STO[->].00
114 /*             */ XEQ'8'
115 /*             */ RTN
116 /*             */ LBL 09
117 /* __LBL_09::  */ STO[->].00
118 /*             */ XEQ'9'
119 /*             */ RTN
120 /*             */ LBL 10
121 /* __LBL_10::  */ STO[->].00
122 /*             */ XEQ'10'
123 /*             */ END
// Max SKIP offset: 0
// Max BACK offset: 63
// Max BSRB offset: 0
// Max BSRF offset: 0
